# This workflow will build and (if release) publish Python distributions to PyPI
# For more information see:
#   - https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
#   - https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
#

name: build-publish

on:
    push:
        branches: [main]
  # release:
  #   types: [published]

jobs:
  build-manylinux-wheels:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build manylinux container
      run: docker build -f Dockerfile.build-manylinux . -t box-intersect-deploy
    - name: Load wheels
      run: docker cp $(docker create --name tc box-intersect-deploy):/work/box-intersect-lib-py/target/wheels ./dist
    - name: Store wheels
      uses: actions/upload-artifact@v4
      with:
        path: dist

  build-macos-wheels:
    runs-on: macos-latest
    strategy:
      matrix:
          python-version: ['3.8', '3.9', '3.10', '3.11', '3.12',]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
          python-version: ${{ matrix.python-version }}
    - uses: actions-rust-lang/setup-rust-toolchain@v1
    - name: Install dependencies
      run: |
          pip install maturin 
          pip install numpy
    - name: Build wheels
      run: |
          cp README.md LICENSE.txt box-intersect-lib-py 
          (cd box-intersect-lib-py && bash ../scripts/build.sh)
          cp -r box-intersect-lib-py/target/wheels dist-macos-${{ matrix.python-version }}
    - name: Store wheels
      uses: actions/upload-artifact@v4
      with:
        path: dist-macos-${{ matrix.python-version }}

  publish:
    runs-on: ubuntu-latest
    needs:
    - build-manylinux-wheels
    - build-macos-wheels
    # if: github.event_name == 'release' && github.event.action == 'published'
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    environment:
      name: release
      url: https://pypi.org/project/pipeline-lib/
    steps:
    - name: Download dists
      uses: actions/download-artifact@v4
      with:
        name: artifact
        path: dist
    - name: Publish
      uses: pypa/gh-action-pypi-publish@release/v1
