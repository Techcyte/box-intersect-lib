---
name: Python tests

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

permissions:
    contents: read

jobs:
    lint-rust:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions-rust-lang/setup-rust-toolchain@v1
            - name: Lint Rust library
              run: | 
                  bash scripts/lint.sh

    unit-test-rust: 
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions-rust-lang/setup-rust-toolchain@v1
            - name: Install dependencies
              run: |
                bash scripts/unit-test.sh

    test-python-bindings: 
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
        steps:
            - uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install dependencies
              run: |
                  pip install maturin 
                  pip install numpy
                  cp README.md LICENSE.txt box-intersect-lib-py 
            - name: Build python bindings into wheel
              run: |
                  (cd box-intersect-lib-py && maturin build --release --strip)
                  pip install box-intersect-lib-py/target/wheels/*
            - name: Run integration test
              run: |
                  python scripts/integration_test.py
    test-linux-wheels:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3
      - name: Build manylinux container
        run: docker build -f Dockerfile.build-manylinux . -t box-intersect-deploy
      - name: Load wheels
        run: docker cp $(docker create --name tc box-intersect-deploy):/work/box-intersect-lib-py/target/wheels ./dist
      - name: Run integration test on native built wheel
        shell: bash
        run: |
            pip install dist/*.whl
            python scripts/integration_test.py
